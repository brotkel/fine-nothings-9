{#
/**
 * @file
 * Theme override for a field.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 *
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 */
#}
<div data-quickedit-entity-id="{{ entity_type }}/{{ element["#object"].id() }}">
  <section{{ attributes.addClass("mx-auto md:w-3/4 lg:w-1/2") }}>
    {%
      include '@finenothings/heading/heading.twig' with {
        "title": "Find Me Here",
        "heading_level": "h2",
        "modifier": "mt-8 mb-4 text-center"
      } only
    %}
    {% set social_array = [] %}
    {% for item in items %}
      {% if item.content["#paragraph"].get("field_media").value()[0].target_id %}
        {% set image = drupal_image(item.content["#paragraph"].get("field_media").value()[0].target_id) %}
      {% endif %}
      {% set social_array = social_array|merge(
        {(loop.index0):
          {
            'icon': item.content["#paragraph"].get("field_icon_type").getValue()[0].value,
            'image': image,
            'text': item.content["#paragraph"].get("field_link").getValue()[0].title,
            'url': item.content["#paragraph"].get("field_link").getValue()[0].uri
            },
        },
      ) %}
    {% endfor %}
    {%
      include "@finenothings/social-icons/social-icons.twig" with {
        "items": social_array,
        "extra_attributes": attributes|without(class)
      } only
    %}
  </section>
</div>